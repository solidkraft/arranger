name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Build and run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          RAILS_ENV: test
        run: |
          bundle install --jobs 4 --retry 3
          bin/rails db:prepare
          bundle exec rake

  sonarqube:
      name: SonarQube Trigger
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@master
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}

  SonarScanner:
    runs-on: ubuntu-latest
    name: Sonar Scanner
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Scan code
        uses: vtex/action-sonarqube@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          host: ${{ secrets.SONARQUBE_HOST }}
          token: ${{ secrets.SONARQUBE_TOKEN }}

  rubyScan:
    runs-on: ubuntu-latest
    name: Sonarqube Ruby Scan
    steps:
      - uses: actions/checkout@master
      - name: Ruby Scan
        uses: ./.github/actions/sonarqube
